
services:
  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb
      labels:
        - project=inception
    image: irychkov_mariadb:v1
    env_file: .env
    secrets:
      - db_root_password
      - db_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-P", "3306"]
      start_period: 90s
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - inception
    restart: unless-stopped

  wordpress:
    container_name: wordpress
    build:
      context: ./requirements/wordpress
      labels:
        - project=inception
    image: irychkov_wordpress:v1
    env_file: .env
    secrets:
      - db_password
      - credentials
    volumes:
      - wordpress_data:/var/www/wp
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - inception
    restart: unless-stopped

  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
      labels:
        - project=inception
    image: irychkov_nginx:v1
    env_file: .env
    volumes:
      - wordpress_data:/var/www/wp:ro   # <-- read-only to nginx
#    secrets: # Optional: Use your own SSL certs or let Nginx create self-signed ones
#      - ssl_cert
#      - ssl_key
    ports:
      - "443:443"
    depends_on:
      - wordpress
    networks:
      - inception
    restart: unless-stopped

volumes:
  mariadb_data:
    labels:
      - project=inception
    driver: local
    name: mariadb_data
    driver_opts:
      type: none
      o: bind
      device: /home/irychkov/data/mariadb
  wordpress_data:
    labels:
      - project=inception
    driver: local
    name: wordpress_data
    driver_opts:
      type: none
      o: bind
      device: /home/irychkov/data/wordpress

networks:
  inception:
    labels:
      - project=inception
    driver: bridge

secrets:
  db_root_password:
    file: ../secrets/db_root_password.txt
  db_password:
    file: ../secrets/db_password.txt
  credentials:
    file: ../secrets/credentials.txt
# Optional: Use your own SSL certs or let Nginx create self-signed ones
#  ssl_cert:
#    file: ../secrets/ssl_cert.pem
#  ssl_key:
#    file: ../secrets/ssl_key.pem